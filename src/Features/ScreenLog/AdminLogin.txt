import { useState, useEffect, useRef } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faEye, faEyeSlash } from "@fortawesome/free-solid-svg-icons";


const VALID_USER = "admin"
const VALID_PASS = "12345"



export default function LoginPass({onlogin}){
      const [login, showlogin] = useState(false); 
      const [username, setusername] = useState(""); 
      const [password, setpassword] = useState(""); 
      const [showpass, setshowpass] = useState(false)
      const [error, seterror] = useState("")

      const userRef = useRef(null)
      const passRef = useRef(null)




    


      useEffect(()=> {
          const auth = localStorage.getItem("islogin")
          if(auth){
               onlogin()
          }
          else{
               showlogin(true);
               if(userRef.current) userRef.current.focus()
          }
      }, [onlogin])
   



      const hanldeLogin = () => {

          if(!username.trim()){
               seterror("Please Enter Username")
               if(userRef.current) userRef.current.focus();
               return
          }

           if(!password.trim()){
               seterror("Please Enter Password")
               if(passRef.current) passRef.current.focus();
               return
          }


          if(username === VALID_USER & password === VALID_PASS){
               localStorage.setItem("islogin", JSON.stringify({
                    username: username,
                    password: password
               }));
               seterror("")
               showlogin(false)
               onlogin();
          }
          else{
     seterror("‚ùå Incorrect username or password")
     if(userRef.current) userRef.current.focus()    
          }



      }







   
     return(
      <AnimatePresence >

{
     login && (

<motion.div
initial={{opacity: 0}}
animate={{opacity: 1}}
exit={{opacity: 0}}
className="fixed inset-0 backdrop-blur-3xl bg-gradient-to-br from-purple-600 to-indigo-800 flex p-5 items-center justify-center z-50"
>

<motion.div
initial={{scale: 0.8, opacity: 0}}
animate={{scale: 1, opacity: 1}}
exit={{scale: 0.8, opacity: 0}}
transition={{duration: 0.4}}
className="bg-white rounded-2xl shadow-2xl p-8"
>


<h2 className="text-3xl font-bold text-center text-gray-800 mb-6">
     üîê Kawsar.Restaurent Login
</h2>


<form action="" onSubmit={hanldeLogin}
className="flex flex-col gap-4"
>




  <div>
<label htmlFor=""
  className="block text-gray-600 font-medium mb-1">
      Username
</label>   
<input type="text" 
value={username}
ref={userRef}
onChange={(e)=> setusername(e.target.value)}
placeholder="Enter username"
onKeyDown={(e)=> {
     if(e.key === "Enter"){
          e.preventDefault()
          if(passRef.current) passRef.current.focus()
     }
}}
className="w-full border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-indigo-500 focus:outline-none"/>
  </div>



<div>
<label htmlFor=""
className="block text-gray-600 font-medium mb-1">
 Password
</label>
<div className="relative">
     <input type={showpass ? "text" : "password"} 
onChange={(e)=> setpassword(e.target.value)}
value={password}
onKeyDown={(e)=> {
     if(e.key === "Enter"){
          e.preventDefault()
          hanldeLogin()
     }
}}
className="w-full border border-gray-300 rounded-lg px-4 py-2 focus:ring-2 focus:ring-indigo-500 focus:outline-none pr-10"
ref={passRef}
placeholder="Enter password"/>

<button
onClick={()=> setshowpass(!showpass)}
type="button"
className="absolute right-3 top-2.5 text-gray-500">
<FontAwesomeIcon icon={showpass ? faEyeSlash : faEye} size="lg"/>
</button>

</div>
</div>

{error && (
     <p className="text-red-600 text-sm font-medium">{error}</p> 
)}


<button
type="submit"
className="mt-3 w-full bg-indigo-600 text-white py-2 rounded-lg font-semibold hover:bg-indigo-700 transition">
     Login
</button>


</form>


</motion.div>
</motion.div>



     )
}
      </AnimatePresence>

     )
}



























-----------App Js-----------


  import LoginPass from "./Features/ScreenLog/login"

  const [islogin, setislogin] = useState(false)




<div>

{
  !islogin ? (
    <LoginPass onlogin={()=> setislogin(true)}/>
  ): (

<>
<Header />



{location.pathname !== '/cart' && <CardBox />}

<div>
<Outlet />
</div>

<Footer />

</>
  )
}

</div>
